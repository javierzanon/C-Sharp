#pragma checksum "C:\Users\Usuario\Documents\GitHub\bpssgestion\bpssgestion\Views\Documento\Nuevo.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "35edb29090b5b28f0b493266fdfa952287524d39"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Documento_Nuevo), @"mvc.1.0.view", @"/Views/Documento/Nuevo.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"35edb29090b5b28f0b493266fdfa952287524d39", @"/Views/Documento/Nuevo.cshtml")]
    public class Views_Documento_Nuevo : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<bpssgestion.bpssdbparametros.NuevoFormulario>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<!doctype html>\r\n<html lang=\"es\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "35edb29090b5b28f0b493266fdfa952287524d392787", async() => {
                WriteLiteral(@"
    <!-- Required meta tags -->
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"">

    <!-- Bootstrap CSS -->
    <link rel=""stylesheet"" href=""../../css/bootstrap.min.css"">

    <title>Documento Nuevo</title>
    
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "35edb29090b5b28f0b493266fdfa952287524d394053", async() => {
                WriteLiteral(@"
  <main role=""main"">
      <section class=""jumbotron"">
          <div class=""container"">
              <h1 class=""jumbotron-heading"" style=""text-align: left"">
                  Documento Nuevo
              </h1>
          </div>
      </section>
      <div class=""container"">
        <div class=""row"">
          <div class=""col-md-4"">
            <p class=""lead text-muted"" style=""text-align: center""></p>
              <form action=""#"" 
                    enctype=""multipart/form-data"" onsubmit=""return false;"" 
                    method=""post"" id=""formularioDocumento"" name=""formularioDocumento"">
                  <dl>
                      <dt>
                          <label for=""DocumentoTipo_FormDocumento"">Tipo de Documento</label>
                      </dt>
                      <dd>
                        <select id=""DocumentoTipo"" name=""DocumentoTipo"" />
");
#nullable restore
#line 38 "C:\Users\Usuario\Documents\GitHub\bpssgestion\bpssgestion\Views\Documento\Nuevo.cshtml"
                             foreach (var item in @Model.documentotipo)
                            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                <option");
                BeginWriteAttribute("value", " value=\r\n                                \"", 1445, "\"", 1538, 1);
#nullable restore
#line 41 "C:\Users\Usuario\Documents\GitHub\bpssgestion\bpssgestion\Views\Documento\Nuevo.cshtml"
WriteAttributeValue("", 1487, Html.DisplayFor(modelItem => item.documentotipoid), 1487, 51, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral("\r\n                                >");
#nullable restore
#line 42 "C:\Users\Usuario\Documents\GitHub\bpssgestion\bpssgestion\Views\Documento\Nuevo.cshtml"
                            Write(Html.DisplayFor(modelItem => item.documentotipo));

#line default
#line hidden
#nullable disable
                WriteLiteral("</option>\r\n");
#nullable restore
#line 43 "C:\Users\Usuario\Documents\GitHub\bpssgestion\bpssgestion\Views\Documento\Nuevo.cshtml"
                            }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                        </select>
                      </dd>
                      <dt>
                          <label for=""UbicacionArea_FormDocumento"">Area</label>
                      </dt>
                      <dd>
                        <select id=""UbicacionArea"" name=""UbicacionArea"" onchange=""onchangeArea();"" />
");
#nullable restore
#line 51 "C:\Users\Usuario\Documents\GitHub\bpssgestion\bpssgestion\Views\Documento\Nuevo.cshtml"
                             foreach (var item in @Model.area)
                            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                <option");
                BeginWriteAttribute("value", " value=\r\n                                \"", 2132, "\"", 2216, 1);
#nullable restore
#line 54 "C:\Users\Usuario\Documents\GitHub\bpssgestion\bpssgestion\Views\Documento\Nuevo.cshtml"
WriteAttributeValue("", 2174, Html.DisplayFor(modelItem => item.areaid), 2174, 42, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral("\r\n                                >");
#nullable restore
#line 55 "C:\Users\Usuario\Documents\GitHub\bpssgestion\bpssgestion\Views\Documento\Nuevo.cshtml"
                            Write(Html.DisplayFor(modelItem => item.area));

#line default
#line hidden
#nullable disable
                WriteLiteral("</option>\r\n");
#nullable restore
#line 56 "C:\Users\Usuario\Documents\GitHub\bpssgestion\bpssgestion\Views\Documento\Nuevo.cshtml"
                            }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                        </select>
                      </dd>
                      <dt>
                          <label for=""UbicacionLote_FormDocumento"">Lote</label>
                      </dt>
                      <dd>
                        <select id=""UbicacionLote"" name=""UbicacionLote"" />
");
#nullable restore
#line 64 "C:\Users\Usuario\Documents\GitHub\bpssgestion\bpssgestion\Views\Documento\Nuevo.cshtml"
                             foreach (var item in @Model.lote)
                            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                <option");
                BeginWriteAttribute("value", " value=\r\n                                \"", 2774, "\"", 2858, 1);
#nullable restore
#line 67 "C:\Users\Usuario\Documents\GitHub\bpssgestion\bpssgestion\Views\Documento\Nuevo.cshtml"
WriteAttributeValue("", 2816, Html.DisplayFor(modelItem => item.loteid), 2816, 42, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral("\r\n                                >");
#nullable restore
#line 68 "C:\Users\Usuario\Documents\GitHub\bpssgestion\bpssgestion\Views\Documento\Nuevo.cshtml"
                            Write(Html.DisplayFor(modelItem => item.lote));

#line default
#line hidden
#nullable disable
                WriteLiteral("</option>\r\n");
#nullable restore
#line 69 "C:\Users\Usuario\Documents\GitHub\bpssgestion\bpssgestion\Views\Documento\Nuevo.cshtml"
                            }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                        </select>
                      </dd>
                  </dl>
                  <div name=""botonSubmit"" id=""botonSubmit"">
                    <input class=""btn"" type=""submit"" value=""Crear"" name=""crearSubmit"" id=""crearSubmit"" onclick=""documentoAgregar();""/>
                  </div>
                  <div style=""margin-top:15px"">
                      <output name=""result""></output>
                  </div>
              </form>
            </p>
            <div name=""divMensaje"" id=""divMensaje"" style=""display: none"">
              Creando Documento. Por favor espere.
            </div>
          </div>
        </div>
      </div>
    </main>
    <script>
      function agregarLote(loteTexto, loteValor)
      {
        //Defino variable para manejar el listbox
        var listaLotes = document.getElementById(""UbicacionLote"");
        //Defino variable para agregar opción nueva
        var item = document.createElement(""option"");
        //Lleno la variable con da");
                WriteLiteral(@"tos
        item.text = loteTexto;
        item.value = loteValor;
        listaLotes.add(item);
      }
      function onchangeArea()
      {
          //Defino variable para manerjar el listado de lotes
          var listaLotes = document.getElementById(""UbicacionLote"");
          //Defino variable con la cantidad actual de lotes en listado
          var cantidadItems = listaLotes.options.length;
          //Borro los lotes listados
          for (i = cantidadItems-1; i >= 0; i--) {
            listaLotes.options[i] = null;
          }
          //Defino variable item
          var item = document.createElement(""option"");
          //Configuro un item nuevo
          item.text = ""Cargando lotes..."";
          item.value = ""0"";
          //Lo agrego al listado
          listaLotes.add(item);
          //Oculto el submit en el formulario
          document.getElementById(""botonSubmit"").style.display=""none"";
          //Defino variable con el área elegida
          areaElegida = $(""#Ub");
                WriteLiteral(@"icacionArea"").val();
          //Busco los lotes del área elegida
          jQuery.post('../../Formulario/Lote', {areaId: areaElegida},  // url
            function (data, textStatus, jqXHR) {  // success callback
                var lotesRecibidos = JSON.parse(data);
                var cantidadLotes = Object.keys(lotesRecibidos.lotes).length;
                //Defino variables
                listaLotes.options[0] = null;
                minimoUnLote = false;
                //var cantidadLotes = Object.keys(lotesRecibidos.lotes).length;
                //Recorro el JSON resultado´
                for (var i = 0; i < cantidadLotes; i++)
                {
                  //Si llego acá es que mínimo se va a cargar un lote
                  minimoUnLote = true;
                  //Agrego el lote a la lista
                  agregarLote(lotesRecibidos.lotes[i].lote, lotesRecibidos.lotes[i].loteid);
                }
                //En caso de que no se haya cargado ni un lote
           ");
                WriteLiteral(@"     //Cargo un ítem avisando que no hay lotes
                if (minimoUnLote == false)
                {
                  item.text = ""Area sin lotes"";
                  item.value = ""0"";
                  listaLotes.add(item);
                }
                else
                {
                  //En caso de que si se hayan cargado lotes muestro el botón submit del formulario
                  document.getElementById(""botonSubmit"").style.display=""block"";
                }
          });
      }
      function documentoAgregar()
      {
        document.getElementById(""formularioDocumento"").style.display=""none"";
        document.getElementById(""divMensaje"").style.display=""block"";
        jQuery.post(""Agregar/Documento"", {DocumentoTipo: document.getElementById(""DocumentoTipo"").value, UbicacionArea: document.getElementById(""UbicacionArea"").value, UbicacionLote: document.getElementById(""UbicacionLote"").value}, function(result){
          window.location.href = '/Documento/' + result + ");
                WriteLiteral(@"'/Descripcion';
        })
        .fail(function() {
          document.getElementById(""divMensaje"").innerHTML = ""Se ha producido un error"";
        });
        
      }
    </script>
    
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src=""../../js/jquery-3.2.1.min.js""></script>
    <script src=""../../js/popper.min.js""></script>
    <script src=""../../js/bootstrap.min.js""></script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<bpssgestion.bpssdbparametros.NuevoFormulario> Html { get; private set; }
    }
}
#pragma warning restore 1591
